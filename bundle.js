var app=function(){"use strict";function s(){}const a=s=>s;function n(s,a){for(const n in a)s[n]=a[n];return s}function t(s){return s()}function l(){return Object.create(null)}function p(s){s.forEach(t)}function e(s){return"function"==typeof s}function c(s,a){return s!=s?a==a:s!==a||s&&"object"==typeof s||"function"==typeof s}function r(a,...n){if(null==a)return s;const t=a.subscribe(...n);return t.unsubscribe?()=>t.unsubscribe():t}function i(s,a,n){s.$$.on_destroy.push(r(a,n))}function h(s,a,n,t){if(s){const l=o(s,a,n,t);return s[0](l)}}function o(s,a,t,l){return s[1]&&l?n(t.ctx.slice(),s[1](l(a))):t.ctx}function g(s,a,n,t,l,p,e){const c=function(s,a,n,t){if(s[2]&&t){const l=s[2](t(n));if(void 0===a.dirty)return l;if("object"==typeof l){const s=[],n=Math.max(a.dirty.length,l.length);for(let t=0;t<n;t+=1)s[t]=a.dirty[t]|l[t];return s}return a.dirty|l}return a.dirty}(a,t,l,p);if(c){const l=o(a,n,t,e);s.p(l,c)}}function j(s,a,n=a){return s.set(n),a}function m(a){return a&&e(a.destroy)?a.destroy:s}const u="undefined"!=typeof window;let d=u?()=>window.performance.now():()=>Date.now(),f=u?s=>requestAnimationFrame(s):s;const b=new Set;function v(s){b.forEach(a=>{a.c(s)||(b.delete(a),a.f())}),0!==b.size&&f(v)}function $(s){let a;return 0===b.size&&f(v),{promise:new Promise(n=>{b.add(a={c:s,f:n})}),abort(){b.delete(a)}}}function x(s,a){s.appendChild(a)}function y(s,a,n){s.insertBefore(a,n||null)}function w(s){s.parentNode.removeChild(s)}function k(s){return document.createElement(s)}function _(s){return document.createTextNode(s)}function T(){return _(" ")}function L(){return _("")}function E(s,a,n,t){return s.addEventListener(a,n,t),()=>s.removeEventListener(a,n,t)}function C(s,a,n){null==n?s.removeAttribute(a):s.getAttribute(a)!==n&&s.setAttribute(a,n)}function M(s,a,n,t){s.style.setProperty(a,n,t?"important":"")}function H(s,a,n){s.classList[n?"add":"remove"](a)}class A{constructor(s=null){this.a=s,this.e=this.n=null}m(s,a,n=null){this.e||(this.e=k(a.nodeName),this.t=a,this.h(s)),this.i(n)}h(s){this.e.innerHTML=s,this.n=Array.from(this.e.childNodes)}i(s){for(let a=0;a<this.n.length;a+=1)y(this.t,this.n[a],s)}p(s){this.d(),this.h(s),this.i(this.a)}d(){this.n.forEach(w)}}const S=new Set;let B,O=0;function P(s,a,n,t,l,p,e,c=0){const r=16.666/t;let i="{\n";for(let s=0;s<=1;s+=r){const t=a+(n-a)*p(s);i+=100*s+`%{${e(t,1-t)}}\n`}const h=i+`100% {${e(n,1-n)}}\n}`,o=`__svelte_${function(s){let a=5381,n=s.length;for(;n--;)a=(a<<5)-a^s.charCodeAt(n);return a>>>0}(h)}_${c}`,g=s.ownerDocument;S.add(g);const j=g.__svelte_stylesheet||(g.__svelte_stylesheet=g.head.appendChild(k("style")).sheet),m=g.__svelte_rules||(g.__svelte_rules={});m[o]||(m[o]=!0,j.insertRule(`@keyframes ${o} ${h}`,j.cssRules.length));const u=s.style.animation||"";return s.style.animation=`${u?u+", ":""}${o} ${t}ms linear ${l}ms 1 both`,O+=1,o}function N(s,a){const n=(s.style.animation||"").split(", "),t=n.filter(a?s=>s.indexOf(a)<0:s=>-1===s.indexOf("__svelte")),l=n.length-t.length;l&&(s.style.animation=t.join(", "),O-=l,O||f(()=>{O||(S.forEach(s=>{const a=s.__svelte_stylesheet;let n=a.cssRules.length;for(;n--;)a.deleteRule(n);s.__svelte_rules={}}),S.clear())}))}function z(s){B=s}function G(s){(function(){if(!B)throw new Error("Function called outside component initialization");return B})().$$.on_mount.push(s)}const D=[],I=[],U=[],Y=[],R=Promise.resolve();let W=!1;function q(s){U.push(s)}let K=!1;const Z=new Set;function F(){if(!K){K=!0;do{for(let s=0;s<D.length;s+=1){const a=D[s];z(a),X(a.$$)}for(z(null),D.length=0;I.length;)I.pop()();for(let s=0;s<U.length;s+=1){const a=U[s];Z.has(a)||(Z.add(a),a())}U.length=0}while(D.length);for(;Y.length;)Y.pop()();W=!1,K=!1,Z.clear()}}function X(s){if(null!==s.fragment){s.update(),p(s.before_update);const a=s.dirty;s.dirty=[-1],s.fragment&&s.fragment.p(s.ctx,a),s.after_update.forEach(q)}}let J;function Q(s,a,n){s.dispatchEvent(function(s,a){const n=document.createEvent("CustomEvent");return n.initCustomEvent(s,!1,!1,a),n}(`${a?"intro":"outro"}${n}`))}const V=new Set;let ss;function as(){ss={r:0,c:[],p:ss}}function ns(){ss.r||p(ss.c),ss=ss.p}function ts(s,a){s&&s.i&&(V.delete(s),s.i(a))}function ls(s,a,n,t){if(s&&s.o){if(V.has(s))return;V.add(s),ss.c.push(()=>{V.delete(s),t&&(n&&s.d(1),t())}),s.o(a)}}const ps={duration:0};function es(n,t,l,c){let r=t(n,l),i=c?0:1,h=null,o=null,g=null;function j(){g&&N(n,g)}function m(s,a){const n=s.b-i;return a*=Math.abs(n),{a:i,b:s.b,d:n,duration:a,start:s.start,end:s.start+a,group:s.group}}function u(t){const{delay:l=0,duration:e=300,easing:c=a,tick:u=s,css:f}=r||ps,b={start:d()+l,b:t};t||(b.group=ss,ss.r+=1),h?o=b:(f&&(j(),g=P(n,i,t,e,l,c,f)),t&&u(0,1),h=m(b,e),q(()=>Q(n,t,"start")),$(s=>{if(o&&s>o.start&&(h=m(o,e),o=null,Q(n,h.b,"start"),f&&(j(),g=P(n,i,h.b,h.duration,0,c,r.css))),h)if(s>=h.end)u(i=h.b,1-i),Q(n,h.b,"end"),o||(h.b?j():--h.group.r||p(h.group.c)),h=null;else if(s>=h.start){const a=s-h.start;i=h.a+h.d*c(a/h.duration),u(i,1-i)}return!(!h&&!o)}))}return{run(s){e(r)?(J||(J=Promise.resolve(),J.then(()=>{J=null})),J).then(()=>{r=r(),u(s)}):u(s)},end(){j(),h=o=null}}}const cs="undefined"!=typeof window?window:"undefined"!=typeof globalThis?globalThis:global;function rs(s){s&&s.c()}function is(s,a,n){const{fragment:l,on_mount:c,on_destroy:r,after_update:i}=s.$$;l&&l.m(a,n),q(()=>{const a=c.map(t).filter(e);r?r.push(...a):p(a),s.$$.on_mount=[]}),i.forEach(q)}function hs(s,a){const n=s.$$;null!==n.fragment&&(p(n.on_destroy),n.fragment&&n.fragment.d(a),n.on_destroy=n.fragment=null,n.ctx=[])}function os(s,a){-1===s.$$.dirty[0]&&(D.push(s),W||(W=!0,R.then(F)),s.$$.dirty.fill(0)),s.$$.dirty[a/31|0]|=1<<a%31}function gs(a,n,t,e,c,r,i=[-1]){const h=B;z(a);const o=n.props||{},g=a.$$={fragment:null,ctx:null,props:r,update:s,not_equal:c,bound:l(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(h?h.$$.context:[]),callbacks:l(),dirty:i,skip_bound:!1};let j=!1;if(g.ctx=t?t(a,o,(s,n,...t)=>{const l=t.length?t[0]:n;return g.ctx&&c(g.ctx[s],g.ctx[s]=l)&&(!g.skip_bound&&g.bound[s]&&g.bound[s](l),j&&os(a,s)),n}):[],g.update(),j=!0,p(g.before_update),g.fragment=!!e&&e(g.ctx),n.target){if(n.hydrate){const s=function(s){return Array.from(s.childNodes)}(n.target);g.fragment&&g.fragment.l(s),s.forEach(w)}else g.fragment&&g.fragment.c();n.intro&&ts(a.$$.fragment),is(a,n.target,n.anchor),F()}z(h)}class js{$destroy(){hs(this,1),this.$destroy=s}$on(s,a){const n=this.$$.callbacks[s]||(this.$$.callbacks[s]=[]);return n.push(a),()=>{const s=n.indexOf(a);-1!==s&&n.splice(s,1)}}$set(s){var a;this.$$set&&(a=s,0!==Object.keys(a).length)&&(this.$$.skip_bound=!0,this.$$set(s),this.$$.skip_bound=!1)}}const ms=[];function us(a,n=s){let t;const l=[];function p(s){if(c(a,s)&&(a=s,t)){const s=!ms.length;for(let s=0;s<l.length;s+=1){const n=l[s];n[1](),ms.push(n,a)}if(s){for(let s=0;s<ms.length;s+=2)ms[s][0](ms[s+1]);ms.length=0}}}return{set:p,update:function(s){p(s(a))},subscribe:function(e,c=s){const r=[e,c];return l.push(r),1===l.length&&(t=n(p)||s),e(a),()=>{const s=l.indexOf(r);-1!==s&&l.splice(s,1),0===l.length&&(t(),t=null)}}}}function ds(s){const a=s-1;return a*a*a+1}function fs(s){return"[object Date]"===Object.prototype.toString.call(s)}function bs(s,a){if(s===a||s!=s)return()=>s;const n=typeof s;if(n!==typeof a||Array.isArray(s)!==Array.isArray(a))throw new Error("Cannot interpolate values of different type");if(Array.isArray(s)){const n=a.map((a,n)=>bs(s[n],a));return s=>n.map(a=>a(s))}if("object"===n){if(!s||!a)throw new Error("Object cannot be null");if(fs(s)&&fs(a)){s=s.getTime();const n=(a=a.getTime())-s;return a=>new Date(s+a*n)}const n=Object.keys(a),t={};return n.forEach(n=>{t[n]=bs(s[n],a[n])}),s=>{const a={};return n.forEach(n=>{a[n]=t[n](s)}),a}}if("number"===n){const n=a-s;return a=>s+a*n}throw new Error(`Cannot interpolate ${n} values`)}function vs(a){let n,t,l,p,e,c,r,i,h;return{c(){n=k("h1"),n.textContent="Great Success",t=T(),l=k("p"),l.innerHTML='You are ready to write documentation for new <a href="https://svelte.dev">Svelte</a> thing!',p=T(),e=k("p"),e.innerHTML="Start from editing files in <code>src/pages</code> directory.",c=T(),r=k("p"),r.innerHTML='<img src="static/great-success.png" alt="Great Success" title="Great Success"/>',i=T(),h=k("blockquote"),h.innerHTML='<p>For more info visit the <a href="https://alexxnb.github.io/svelte-docs/">Svelte-Docs Reference</a></p>',C(n,"id","great-success")},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a),y(s,p,a),y(s,e,a),y(s,c,a),y(s,r,a),y(s,i,a),y(s,h,a)},p:s,i:s,o:s,d(s){s&&w(n),s&&w(t),s&&w(l),s&&w(p),s&&w(e),s&&w(c),s&&w(r),s&&w(i),s&&w(h)}}}const $s={layout:"no_sidebar",title:!1};class xs extends js{constructor(s){super(),gs(this,s,null,vs,c,{})}}function ys(a){let n,t,l;return{c(){n=k("h1"),n.textContent="Page not found!",t=T(),l=k("p"),l.innerHTML='<a href="/">Go to start page</a>',C(n,"id","page-not-found"),C(n,"class","svelte-aiue6m"),C(l,"class","svelte-aiue6m")},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a)},p:s,i:s,o:s,d(s){s&&w(n),s&&w(t),s&&w(l)}}}const ws={layout:"no_sidebar"};function ks(a){let n,t,l,p,e,c,r,i,h,o,g,j,m,u;return{c(){n=k("h1"),n.textContent="About my component",t=T(),l=k("blockquote"),l.innerHTML='<p>Nested actions are awaiting <a href="https://github.com/sveltejs/svelte/pull/5398">support methods as action (sveltejs/svelte#5398)</a>.</p>',p=T(),e=k("h2"),e.textContent="Installation",c=T(),r=k("p"),r.textContent="Run this command:",i=T(),o=T(),g=k("p"),g.textContent="Then you can import it in your projects:",j=T(),u=L(),C(n,"id","about-my-component"),C(e,"id","installation"),h=new A(o),m=new A(u)},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a),y(s,p,a),y(s,e,a),y(s,c,a),y(s,r,a),y(s,i,a),h.m(Ts,s,a),y(s,o,a),y(s,g,a),y(s,j,a),m.m(Ls,s,a),y(s,u,a)},p:s,i:s,o:s,d(s){s&&w(n),s&&w(t),s&&w(l),s&&w(p),s&&w(e),s&&w(c),s&&w(r),s&&w(i),s&&h.d(),s&&w(o),s&&w(g),s&&w(j),s&&w(u),s&&m.d()}}}const _s={},Ts='<pre><code class="language-shell"><span class="hljs-meta">$</span><span class="bash"> npm install @svelkit/spectre</span></code></pre>\n',Ls='<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  <span class="hljs-keyword">import</span> Button <span class="hljs-keyword">from</span> <span class="hljs-string">\'my-svelte-button\'</span>\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre>\n';const Es=s=>({}),Cs=s=>({}),Ms=s=>({}),Hs=s=>({});function As(s){let a,n,t,l,p;const e=s[1].result,c=h(e,s,s[0],Hs),r=s[1].code,i=h(r,s,s[0],Cs);return{c(){a=k("div"),n=k("div"),c&&c.c(),t=T(),l=k("div"),i&&i.c(),C(n,"class","result"),C(l,"class","code"),C(a,"class","example")},m(s,e){y(s,a,e),x(a,n),c&&c.m(n,null),x(a,t),x(a,l),i&&i.m(l,null),p=!0},p(s,[a]){c&&c.p&&1&a&&g(c,e,s,s[0],a,Ms,Hs),i&&i.p&&1&a&&g(i,r,s,s[0],a,Es,Cs)},i(s){p||(ts(c,s),ts(i,s),p=!0)},o(s){ls(c,s),ls(i,s),p=!1},d(s){s&&w(a),c&&c.d(s),i&&i.d(s)}}}function Ss(s,a,n){let{$$slots:t={},$$scope:l}=a;return s.$$set=s=>{"$$scope"in s&&n(0,l=s.$$scope)},[l,t]}class Bs extends js{constructor(s){super(),gs(this,s,Ss,As,c,{})}}function Os(s){let a,n,t;return{c(){a=k("iframe"),C(a,"slot","result"),M(a,"height",s[2]+"px"),C(a,"title","Result"),C(a,"scrolling","no"),C(a,"sandbox","allow-same-origin allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-scripts"),C(a,"srcdoc",s[3]),C(a,"class","svelte-y9biys")},m(l,p){y(l,a,p),s[7](a),n||(t=E(a,"load",s[4]),n=!0)},p(s,n){4&n&&M(a,"height",s[2]+"px")},d(l){l&&w(a),s[7](null),n=!1,t()}}}function Ps(s){let a,n,t=s[0].trim()+"";return{c(){a=k("pre"),n=k("code"),C(a,"slot","code"),C(a,"class","hljs svelte-y9biys")},m(s,l){y(s,a,l),x(a,n),n.innerHTML=t},p(s,a){1&a&&t!==(t=s[0].trim()+"")&&(n.innerHTML=t)},d(s){s&&w(a)}}}function Ns(a){let n;return{c(){n=T()},m(s,a){y(s,n,a)},p:s,d(s){s&&w(n)}}}function zs(s){let a,n;return a=new Bs({props:{$$slots:{default:[Ns],code:[Ps],result:[Os]},$$scope:{ctx:s}}}),{c(){rs(a.$$.fragment)},m(s,t){is(a,s,t),n=!0},p(s,[n]){const t={};1031&n&&(t.$$scope={dirty:n,ctx:s}),a.$set(t)},i(s){n||(ts(a.$$.fragment,s),n=!0)},o(s){ls(a.$$.fragment,s),n=!1},d(s){hs(a,s)}}}let Gs=1;function Ds(s,a,n){let{name:t}=a,{code:l}=a,{height:p=!1}=a;const e=Number.isInteger(p);let c,r=Gs++,i=e?p:70;return window.addEventListener("message",(function(s){s.data.iframe_id&&s.data.iframe_id===r&&!e&&s.data.hasOwnProperty("HEIGHT")&&n(2,i=s.data.HEIGHT)})),s.$$set=s=>{"name"in s&&n(5,t=s.name),"code"in s&&n(0,l=s.code),"height"in s&&n(6,p=s.height)},[l,c,i,"<!doctype html>\n<html style=\"height: auto !important\">\n    <head>\n        <meta charset='utf-8'>\n        <base href='/' />\n        <link rel='stylesheet' href='examples.css'>\n        <script defer src='examples.js'><\/script>\n    </head>\n    <body style=\"height: auto !important\"></body>\n</html>",function(){c.contentWindow.postMessage({COMPONENT:t,iframe_id:r},"*")},t,p,function(s){I[s?"unshift":"push"](()=>{c=s,n(1,c)})}]}class Is extends js{constructor(s){super(),gs(this,s,Ds,zs,c,{name:5,code:0,height:6})}}function Us(a){let n,t,l,p,e,c,r,i,h,o,g,j,m,u,d,f,b,v,$,x,_,E,M,H,S,B,O,P,N,z,G,D,I,U,Y,R,W,q,K,Z,F,X,J,Q,V,ss,as;return $=new Is({props:{name:"Ex_0_79e4b2b59382662bda26268f32cc6923",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; badge &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">use:badge</span>&gt;</span>Notifications<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span>',height:!1}}),M=new Is({props:{name:"Ex_1_79e4b2b59382662bda26268f32cc6923",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; badge &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=</span></span><span class="javascript">&#123;badge()&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Notifications<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span>',height:!1}}),O=new Is({props:{name:"Ex_2_79e4b2b59382662bda26268f32cc6923",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; badge, btn &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span> <span class="hljs-attr">use:badge</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">8</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n  Button\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span>',height:!1}}),I=new Is({props:{name:"Ex_3_79e4b2b59382662bda26268f32cc6923",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; spectre &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:spectre</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'btn badge\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">data-badge</span>=<span class="hljs-string">"8"</span>&gt;</span>\n  Button\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span>',height:!1}}),W=new Is({props:{name:"Ex_4_79e4b2b59382662bda26268f32cc6923",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; spectre &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=</span></span><span class="javascript">&#123;spectre(<span class="hljs-string">\'btn badge\'</span>)&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">data-badge</span>=<span class="hljs-string">"8"</span>&gt;</span>\n  Button\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span>',height:!1}}),{c(){n=k("h1"),n.textContent="@svelkit/spectre",t=T(),l=k("p"),l.innerHTML='Using <a href="https://picturepan2.github.io/spectre/">spectre</a> to create lightweight, responsive and modern UIs.',p=T(),e=k("h2"),e.textContent="Installation",c=T(),i=T(),h=k("h2"),h.textContent="Usage",o=T(),g=k("p"),g.innerHTML='This package exports a number of <a href="https://svelte.dev/docs#use_action">actions</a> to add <a href="https://picturepan2.github.io/spectre/">spectre</a> css classes to DOM elements. Some actions additionally add aria attributes.',j=T(),m=k("p"),m.innerHTML="<em>Note:</em> Using nested actions (eg: <code>use:btn.primary</code>) requires <code>svelte@^3.26.0</code>",u=T(),d=k("h2"),d.textContent="API",f=T(),b=k("p"),b.innerHTML="Each action can be used with the <code>use:action</code> svelte directive: <code>&lt;T&gt;(node: Element, options?: T) =&gt; { update(options?: T): void }</code>.",v=T(),rs($.$$.fragment),x=T(),_=k("p"),_.innerHTML="In some cases it may be useful to get the css classes as a string. All actions support this as well: <code>&lt;T&gt;(options?: T) =&gt; string</code>",E=T(),rs(M.$$.fragment),H=T(),S=k("p"),S.textContent="Actions can be combined:",B=T(),rs(O.$$.fragment),P=T(),N=k("h2"),N.innerHTML="The <code>spectre</code> action",z=T(),G=k("p"),G.innerHTML="The <code>spectre</code> action utility allows constructing class strings conditionally.",D=T(),rs(I.$$.fragment),U=T(),Y=k("p"),Y.innerHTML="Using the <code>spectre</code> class helper:",R=T(),rs(W.$$.fragment),q=T(),K=k("p"),K.innerHTML="This function can take <strong>any</strong> number of arguments, each of which can be an Object, Array, Boolean, or String.",Z=T(),X=T(),J=k("p"),J.textContent="All falsey values are discarded! Standalone Boolean values are discarded as well.",Q=T(),ss=L(),C(n,"id","svelkitspectre"),C(e,"id","installation"),r=new A(i),C(h,"id","usage"),C(d,"id","api"),C(N,"id","the-spectre-action"),F=new A(X),V=new A(ss)},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a),y(s,p,a),y(s,e,a),y(s,c,a),r.m(Rs,s,a),y(s,i,a),y(s,h,a),y(s,o,a),y(s,g,a),y(s,j,a),y(s,m,a),y(s,u,a),y(s,d,a),y(s,f,a),y(s,b,a),y(s,v,a),is($,s,a),y(s,x,a),y(s,_,a),y(s,E,a),is(M,s,a),y(s,H,a),y(s,S,a),y(s,B,a),is(O,s,a),y(s,P,a),y(s,N,a),y(s,z,a),y(s,G,a),y(s,D,a),is(I,s,a),y(s,U,a),y(s,Y,a),y(s,R,a),is(W,s,a),y(s,q,a),y(s,K,a),y(s,Z,a),F.m(Ws,s,a),y(s,X,a),y(s,J,a),y(s,Q,a),V.m(qs,s,a),y(s,ss,a),as=!0},p:s,i(s){as||(ts($.$$.fragment,s),ts(M.$$.fragment,s),ts(O.$$.fragment,s),ts(I.$$.fragment,s),ts(W.$$.fragment,s),as=!0)},o(s){ls($.$$.fragment,s),ls(M.$$.fragment,s),ls(O.$$.fragment,s),ls(I.$$.fragment,s),ls(W.$$.fragment,s),as=!1},d(s){s&&w(n),s&&w(t),s&&w(l),s&&w(p),s&&w(e),s&&w(c),s&&r.d(),s&&w(i),s&&w(h),s&&w(o),s&&w(g),s&&w(j),s&&w(m),s&&w(u),s&&w(d),s&&w(f),s&&w(b),s&&w(v),hs($,s),s&&w(x),s&&w(_),s&&w(E),hs(M,s),s&&w(H),s&&w(S),s&&w(B),hs(O,s),s&&w(P),s&&w(N),s&&w(z),s&&w(G),s&&w(D),hs(I,s),s&&w(U),s&&w(Y),s&&w(R),hs(W,s),s&&w(q),s&&w(K),s&&w(Z),s&&F.d(),s&&w(X),s&&w(J),s&&w(Q),s&&w(ss),s&&V.d()}}}const Ys={},Rs='<pre><code class="language-sh">npm install @svelkit/spectre</code></pre>\n',Ws='<pre><code class="language-js"><span class="hljs-comment">// Strings (variadic)</span>\nspectre(<span class="hljs-string">\'btn\'</span>, <span class="hljs-literal">true</span> &amp;&amp; <span class="hljs-string">\'active\'</span>, <span class="hljs-string">\'btn-lg\'</span>);\n<span class="hljs-comment">// =&gt; \'btn active btn-lg\'</span>\n\n<span class="hljs-comment">// Objects</span>\nspectre(&#123; <span class="hljs-attr">btn</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">loading</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">disabled</span>: isTrue() &#125;);\n<span class="hljs-comment">// =&gt; \'btn disabled\'</span>\n\n<span class="hljs-comment">// Objects (variadic)</span>\nspectre(&#123; <span class="hljs-attr">btn</span>: <span class="hljs-literal">true</span> &#125;, &#123; <span class="hljs-attr">active</span>: <span class="hljs-literal">false</span> &#125;, <span class="hljs-literal">null</span>, &#123; <span class="hljs-string">\'loading\'</span>: $fetching &#125;);\n<span class="hljs-comment">// =&gt; \'btn loading\'</span>\n\n<span class="hljs-comment">// Arrays</span>\nspectre([<span class="hljs-string">\'btn\'</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">false</span> &amp;&amp; <span class="hljs-string">\'active\'</span>, <span class="hljs-string">\'btn-primary\'</span>]);\n<span class="hljs-comment">// =&gt; \'btn btn-primary\'</span>\n\n<span class="hljs-comment">// Arrays (variadic)</span>\nspectre([<span class="hljs-string">\'btn\'</span>], [<span class="hljs-string">\'\'</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">false</span>, <span class="hljs-string">\'tooltip\'</span>], [[<span class="hljs-string">\'loading\'</span>, [[<span class="hljs-string">\'active\'</span>], <span class="hljs-string">\'disabled\'</span>]]]);\n<span class="hljs-comment">// =&gt; \'btn tooltip loading active disabled\'</span>\n\n<span class="hljs-comment">// Kitchen sink (with nesting)</span>\nspectre(<span class="hljs-string">\'btn\'</span>, [<span class="hljs-number">1</span> &amp;&amp; <span class="hljs-string">\'loading\'</span>, &#123; <span class="hljs-attr">active</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">null</span> &#125;, [<span class="hljs-string">\'btn-lg\'</span>, [<span class="hljs-string">\'btn-primary\'</span>]]], <span class="hljs-string">\'tooltip\'</span>);\n<span class="hljs-comment">// =&gt; \'btn loading btn-lg btn-primary tooltip\'</span></code></pre>\n',qs='<pre><code class="language-js">spectre(<span class="hljs-literal">true</span>, <span class="hljs-literal">false</span>, <span class="hljs-string">\'\'</span>, <span class="hljs-literal">null</span>, <span class="hljs-literal">undefined</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">NaN</span>);\n<span class="hljs-comment">// =&gt; \'\'</span></code></pre>\n';function Ks(a){let n,t,l,p,e,c,r,i,h,o,g,j,m,u,d,f,b,v,$,x,_,L,E,M;return h=new Is({props:{name:"Ex_0_0cbaf53e0b333f14feb6408b08c501fb",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; avatar, bg &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n</span><span class="hljs-comment">&lt;!-- Using images --&gt;</span><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.xl</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-1.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"Avatar XL"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.lg</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-2.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"Avatar LG"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-3.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"Avatar"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.sm</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-4.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"Avatar SM"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.xs</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-5.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"Avatar XS"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n\n</span><span class="hljs-comment">&lt;!-- Using initials --&gt;</span><span class="xml">\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.xl</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'YZ\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.lg</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'YZ\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">use:bg.dark</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.md</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'YZ\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">use:bg.success</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.sm</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'YZ\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">use:bg.error</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.xs</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'YZ\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">use:bg.warning</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span></span>',height:!1}}),m=new Is({props:{name:"Ex_1_0cbaf53e0b333f14feb6408b08c501fb",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; avatar &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.xl</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-1.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"..."</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-5.png"</span> <span class="hljs-attr">use:avatar.icon</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"..."</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span></span>',height:!1}}),$=new Is({props:{name:"Ex_2_0cbaf53e0b333f14feb6408b08c501fb",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; avatar &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.xl</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-1.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"..."</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">use:avatar.online</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.xl</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-2.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"..."</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">use:avatar.busy</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.xl</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-3.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"..."</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">use:avatar.away</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar.xl</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-4.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"..."</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">use:avatar.presence</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span></span>',height:!1}}),E=new Is({props:{name:"Ex_3_0cbaf53e0b333f14feb6408b08c501fb",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; Knobs &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/docs\'</span>\n\n  <span class="hljs-keyword">import</span> &#123; avatar &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n\n  <span class="hljs-keyword">let</span> state = &#123; <span class="hljs-attr">size</span>: <span class="hljs-literal">undefined</span>, <span class="hljs-attr">presence</span>: <span class="hljs-literal">undefined</span>, <span class="hljs-attr">initial</span>: <span class="hljs-string">\'AB\'</span> &#125;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar</span>=</span></span><span class="javascript">&#123;state.size&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-5.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"..."</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">use:avatar.presence</span>=</span></span><span class="javascript">&#123;state.presence&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar</span>=</span></span><span class="javascript">&#123;&#123;<span class="hljs-attr">size</span>: state.size, <span class="hljs-attr">initial</span>: state.initial&#125;&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">use:avatar.presence</span>=</span></span><span class="javascript">&#123;state.presence&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Knobs</span> <span class="hljs-attr">bind:state</span>=</span></span><span class="javascript">&#123;state&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">config</span>=</span></span><span class="javascript">&#123;&#123;\n  <span class="hljs-attr">size</span>: &#123; <span class="hljs-attr">options</span>: [<span class="hljs-string">\'xs\'</span>, <span class="hljs-string">\'sm\'</span>, <span class="hljs-literal">undefined</span>, <span class="hljs-string">\'lg\'</span>, <span class="hljs-string">\'xl\'</span>] &#125;,\n  <span class="hljs-attr">presence</span>: &#123; <span class="hljs-attr">options</span>: [<span class="hljs-literal">undefined</span>, <span class="hljs-string">\'online\'</span>, <span class="hljs-string">\'busy\'</span>, <span class="hljs-string">\'away\'</span>] &#125;,\n  <span class="hljs-attr">initial</span>: &#123; <span class="hljs-attr">size</span>: <span class="hljs-number">2</span> &#125;\n&#125;</span><span class="xml"><span class="hljs-tag">&#125; /&gt;</span></span>',height:!1}}),{c(){n=k("h1"),n.textContent="Avatars",t=T(),l=k("p"),l.innerHTML='<a href="https://picturepan2.github.io/spectre/components/avatars.html">Avatars</a> are user profile pictures..',p=T(),e=k("p"),e.innerHTML="Apply the <code>avatar</code> action to an element. There are 4 additional sizes available, including <code>xl</code> (64px), <code>lg</code> (48px), <code>sm</code> (24px), and <code>xs</code> (16px). By default, the avatar size is 32px.",c=T(),r=k("p"),r.innerHTML="For users who don&#39;t have profile pictures, you may use their initials for avatars. The <code>initial</code> property is the value inside the avatar when avatar image is unavailable or not fully loaded.",i=T(),rs(h.$$.fragment),o=T(),g=k("h2"),g.textContent="Avatar icons",j=T(),rs(m.$$.fragment),u=T(),d=k("h2"),d.textContent="Avatar presence",f=T(),b=k("p"),b.innerHTML="Avatars support presence indicators. You can add an <code>&lt;i&gt;</code> element with the <code>presence</code> variant, and add <code>online</code>, <code>busy</code> or <code>away</code> class for different status colors. The default is gray which means offline.",v=T(),rs($.$$.fragment),x=T(),_=k("h2"),_.textContent="Playground",L=T(),rs(E.$$.fragment),C(n,"id","avatars"),C(g,"id","avatar-icons"),C(d,"id","avatar-presence"),C(_,"id","playground")},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a),y(s,p,a),y(s,e,a),y(s,c,a),y(s,r,a),y(s,i,a),is(h,s,a),y(s,o,a),y(s,g,a),y(s,j,a),is(m,s,a),y(s,u,a),y(s,d,a),y(s,f,a),y(s,b,a),y(s,v,a),is($,s,a),y(s,x,a),y(s,_,a),y(s,L,a),is(E,s,a),M=!0},p:s,i(s){M||(ts(h.$$.fragment,s),ts(m.$$.fragment,s),ts($.$$.fragment,s),ts(E.$$.fragment,s),M=!0)},o(s){ls(h.$$.fragment,s),ls(m.$$.fragment,s),ls($.$$.fragment,s),ls(E.$$.fragment,s),M=!1},d(s){s&&w(n),s&&w(t),s&&w(l),s&&w(p),s&&w(e),s&&w(c),s&&w(r),s&&w(i),hs(h,s),s&&w(o),s&&w(g),s&&w(j),hs(m,s),s&&w(u),s&&w(d),s&&w(f),s&&w(b),s&&w(v),hs($,s),s&&w(x),s&&w(_),s&&w(L),hs(E,s)}}}const Zs={};function Fs(a){let n,t,l,p,e,c,r,i,h,o,g,j,m,u,d,f,b,v,$,x;return h=new Is({props:{name:"Ex_0_19f3ec0b00308b14d892538bb72295f8",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; badge &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">use:badge</span>&gt;</span>Notifications<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">use:badge</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">8</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Notifications<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span>',height:!1}}),m=new Is({props:{name:"Ex_1_19f3ec0b00308b14d892538bb72295f8",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; badge, btn &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span> <span class="hljs-attr">use:badge</span>&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span> <span class="hljs-attr">use:badge</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">8</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Button<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span>',height:!1}}),d=new Is({props:{name:"Ex_2_19f3ec0b00308b14d892538bb72295f8",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; badge, avatar &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar</span>=</span></span><span class="javascript">&#123;&#123;<span class="hljs-attr">initial</span>: <span class="hljs-string">\'YZ\'</span>&#125;&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">use:badge</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">8</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-3.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"YZ"</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span></span>',height:!1}}),$=new Is({props:{name:"Ex_3_19f3ec0b00308b14d892538bb72295f8",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; Knobs &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/docs\'</span>\n\n  <span class="hljs-keyword">import</span> &#123; badge &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n\n  <span class="hljs-keyword">let</span> state = &#123; <span class="hljs-attr">value</span>: <span class="hljs-literal">undefined</span> &#125;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">use:badge</span>=</span></span><span class="javascript">&#123;state.value&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Notifications<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Knobs</span> <span class="hljs-attr">bind:state</span>=</span></span><span class="javascript">&#123;state&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">config</span>=</span></span><span class="javascript">&#123;&#123;\n  <span class="hljs-attr">value</span>: &#123; <span class="hljs-attr">size</span>: <span class="hljs-number">5</span> &#125;\n&#125;</span><span class="xml"><span class="hljs-tag">&#125; /&gt;</span></span>',height:!1}}),{c(){n=k("h1"),n.textContent="Badges",t=T(),l=k("p"),l.innerHTML='<a href="https://picturepan2.github.io/spectre/components/badges.html">Badges</a> are often used as unread number indicators.',p=T(),e=k("p"),e.innerHTML="Add the <code>badge</code> action to non self closing elements. The parameter defines the content of a badge. The badge will appear in the top-right direction of the element.",c=T(),r=k("p"),r.innerHTML="If there is no <code>data-badge</code> or the parameter is not specified, the badge will appear as a dot.",i=T(),rs(h.$$.fragment),o=T(),g=k("p"),g.innerHTML='Badges support <a href="spectre/buttons">button</a> and <a href="spectre//avatars">avatars</a> elements as well.',j=T(),rs(m.$$.fragment),u=T(),rs(d.$$.fragment),f=T(),b=k("h2"),b.textContent="Playground",v=T(),rs($.$$.fragment),C(n,"id","badges"),C(b,"id","playground")},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a),y(s,p,a),y(s,e,a),y(s,c,a),y(s,r,a),y(s,i,a),is(h,s,a),y(s,o,a),y(s,g,a),y(s,j,a),is(m,s,a),y(s,u,a),is(d,s,a),y(s,f,a),y(s,b,a),y(s,v,a),is($,s,a),x=!0},p:s,i(s){x||(ts(h.$$.fragment,s),ts(m.$$.fragment,s),ts(d.$$.fragment,s),ts($.$$.fragment,s),x=!0)},o(s){ls(h.$$.fragment,s),ls(m.$$.fragment,s),ls(d.$$.fragment,s),ls($.$$.fragment,s),x=!1},d(s){s&&w(n),s&&w(t),s&&w(l),s&&w(p),s&&w(e),s&&w(c),s&&w(r),s&&w(i),hs(h,s),s&&w(o),s&&w(g),s&&w(j),hs(m,s),s&&w(u),hs(d,s),s&&w(f),s&&w(b),s&&w(v),hs($,s)}}}const Xs={};function Js(a){let n,t,l,p,e,c,r,i,h,o,g,j,m,u,d,f,b,v,$,x,_,L,E,M,H,S,B,O,P,N,z,G;return d=new Is({props:{name:"Ex_0_ba7fc842593a78d91f569bca5d00f96e",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; bar, tooltip, spectre &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'sm\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">use:spectre</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'mb-2\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar.item</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">25</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">use:tooltip</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'25%\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar.item</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">50</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">use:tooltip</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'50%\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>',height:!1}}),$=new Is({props:{name:"Ex_1_ba7fc842593a78d91f569bca5d00f96e",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; bar, tooltip, bg &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar.item</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">25</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">use:tooltip</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'25%\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">use:bg</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'success\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>25%<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar.item</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">15</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">use:tooltip</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'15%\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">use:bg</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'warning\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>15%<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>',height:!1}}),E=new Is({props:{name:"Ex_2_ba7fc842593a78d91f569bca5d00f96e",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; bar, tooltip &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar.slider</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar.item</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">25</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:bar.btn</span> <span class="hljs-attr">use:tooltip</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'25%\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>',height:!1}}),B=new Is({props:{name:"Ex_3_ba7fc842593a78d91f569bca5d00f96e",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; bar, tooltip &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar.slider</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar.item</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">15</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:bar.btn</span> <span class="hljs-attr">use:tooltip</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'15%\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar.item</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">65</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:bar.btn</span> <span class="hljs-attr">use:tooltip</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'65%\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>',height:!1}}),z=new Is({props:{name:"Ex_4_ba7fc842593a78d91f569bca5d00f96e",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; Knobs &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/docs\'</span>\n\n  <span class="hljs-keyword">import</span> &#123; bar &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n\n  <span class="hljs-keyword">let</span> state = &#123; <span class="hljs-attr">value</span>: <span class="hljs-number">23</span>, <span class="hljs-attr">min</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">max</span>: <span class="hljs-number">100</span> &#125;\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:bar.item</span>=</span></span><span class="javascript">&#123;state&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span></span><span class="javascript">&#123;state.value&#125;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">Knobs</span> <span class="hljs-attr">bind:state</span>=</span></span><span class="javascript">&#123;state&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">config</span>=</span></span><span class="javascript">&#123;&#123;\n  <span class="hljs-attr">value</span>: &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">\'number\'</span> &#125;,\n  <span class="hljs-attr">min</span>: &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">\'number\'</span> &#125;,\n  <span class="hljs-attr">max</span>: &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">\'number\'</span> &#125;,\n&#125;</span><span class="xml"><span class="hljs-tag">&#125; /&gt;</span></span>',height:!1}}),{c(){n=k("h1"),n.textContent="Bars",t=T(),l=k("p"),l.innerHTML='<a href="https://picturepan2.github.io/spectre/components/bars.html">Bars</a> represent the progress of a task or the value within the known range. Bars are custom components for displaying HTML5 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress">progress</a>, <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter">meter</a> and input range elements.',p=T(),e=k("p"),e.innerHTML="Apply the <code>bar</code> action to an element and <code>bar.item</code> to its child elements. The <code>value</code> parameter is needed for every <code>bar.item</code>.",c=T(),r=k("p"),r.innerHTML='There is the <code>sm</code> variant for thinner Bars. Also, you could use <a href="spectre/tooltips">tooltips</a> for any <code>bar.item</code> or <code>bar.btn</code>.',i=T(),h=k("p"),h.innerHTML="On each <code>bar.item</code> the following aria attributes are set based on the options passed to <code>bar.item</code>:",o=T(),j=T(),m=k("h2"),m.textContent="Normal Bars",u=T(),rs(d.$$.fragment),f=T(),b=k("h2"),b.textContent="Multi Bars",v=T(),rs($.$$.fragment),x=T(),_=k("h2"),_.textContent="Slider Bar",L=T(),rs(E.$$.fragment),M=T(),H=k("h2"),H.textContent="Range Slider Bar",S=T(),rs(B.$$.fragment),O=T(),P=k("h2"),P.textContent="Playground",N=T(),rs(z.$$.fragment),C(n,"id","bars"),g=new A(j),C(m,"id","normal-bars"),C(b,"id","multi-bars"),C(_,"id","slider-bar"),C(H,"id","range-slider-bar"),C(P,"id","playground")},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a),y(s,p,a),y(s,e,a),y(s,c,a),y(s,r,a),y(s,i,a),y(s,h,a),y(s,o,a),g.m(Vs,s,a),y(s,j,a),y(s,m,a),y(s,u,a),is(d,s,a),y(s,f,a),y(s,b,a),y(s,v,a),is($,s,a),y(s,x,a),y(s,_,a),y(s,L,a),is(E,s,a),y(s,M,a),y(s,H,a),y(s,S,a),is(B,s,a),y(s,O,a),y(s,P,a),y(s,N,a),is(z,s,a),G=!0},p:s,i(s){G||(ts(d.$$.fragment,s),ts($.$$.fragment,s),ts(E.$$.fragment,s),ts(B.$$.fragment,s),ts(z.$$.fragment,s),G=!0)},o(s){ls(d.$$.fragment,s),ls($.$$.fragment,s),ls(E.$$.fragment,s),ls(B.$$.fragment,s),ls(z.$$.fragment,s),G=!1},d(s){s&&w(n),s&&w(t),s&&w(l),s&&w(p),s&&w(e),s&&w(c),s&&w(r),s&&w(i),s&&w(h),s&&w(o),s&&g.d(),s&&w(j),s&&w(m),s&&w(u),hs(d,s),s&&w(f),s&&w(b),s&&w(v),hs($,s),s&&w(x),s&&w(_),s&&w(L),hs(E,s),s&&w(M),s&&w(H),s&&w(S),hs(B,s),s&&w(O),s&&w(P),s&&w(N),hs(z,s)}}}const Qs={},Vs='<pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">role</span>=<span class="hljs-string">"progressbar"</span> <span class="hljs-attr">aria-valuenow</span>=<span class="hljs-string">"50"</span> <span class="hljs-attr">aria-valuemin</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">aria-valuemax</span>=<span class="hljs-string">"100"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre>\n';function sa(a){let n,t,l,p,e,c,r,i,h,o,g,j,m,u,d,f,b,v,$,x;return m=new Is({props:{name:"Ex_0_1d127a5e98e0c2f2191ef0b220a26653",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; baseline &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n\n  baseline()\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">main</span>&gt;</span>The application<span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></span>',height:!1}}),$=new Is({props:{name:"Ex_1_1d127a5e98e0c2f2191ef0b220a26653",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; baseline &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">main</span> <span class="hljs-attr">use:baseline</span>&gt;</span>The rest of your application<span class="hljs-tag">&lt;/<span class="hljs-name">main</span>&gt;</span></span>',height:!1}}),{c(){n=k("h1"),n.textContent="Baseline",t=T(),l=k("p"),l.textContent="A baseline action to kickstart an elegant, consistent, and simple baseline to build upon.",p=T(),e=k("h2"),e.textContent="Why?",c=T(),r=k("p"),r.textContent="It fixes some inconsistencies across browsers and devices while providing slightly more opinionated resets to common HTML elements.",i=T(),h=k("h2"),h.textContent="Global reset",o=T(),g=k("p"),g.innerHTML='You might be familiar with <a href="https://github.com/necolas/normalize.css">normalize.css</a>, a collection of HTML element and attribute style-normalizations.',j=T(),rs(m.$$.fragment),u=T(),d=k("h2"),d.textContent="Scoping on children",f=T(),b=k("p"),b.innerHTML="However, you might be progressively migrating a website to <code>svelkit</code>, using a global reset might not be an option. It&#39;s possible to apply the baseline only to the children of an element.",v=T(),rs($.$$.fragment),C(n,"id","baseline"),C(e,"id","why"),C(h,"id","global-reset"),C(d,"id","scoping-on-children")},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a),y(s,p,a),y(s,e,a),y(s,c,a),y(s,r,a),y(s,i,a),y(s,h,a),y(s,o,a),y(s,g,a),y(s,j,a),is(m,s,a),y(s,u,a),y(s,d,a),y(s,f,a),y(s,b,a),y(s,v,a),is($,s,a),x=!0},p:s,i(s){x||(ts(m.$$.fragment,s),ts($.$$.fragment,s),x=!0)},o(s){ls(m.$$.fragment,s),ls($.$$.fragment,s),x=!1},d(s){s&&w(n),s&&w(t),s&&w(l),s&&w(p),s&&w(e),s&&w(c),s&&w(r),s&&w(i),s&&w(h),s&&w(o),s&&w(g),s&&w(j),hs(m,s),s&&w(u),s&&w(d),s&&w(f),s&&w(b),s&&w(v),hs($,s)}}}const aa={};function na(a){let n,t,l,p,e,c,r,i;return r=new Is({props:{name:"Ex_0_a1035118c51351bb78db2b905ef7c292",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; breadcrumb, btn &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">use:breadcrumb</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">use:breadcrumb.item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span>&gt;</span>Home<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">use:breadcrumb.item</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span>&gt;</span>Settings<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">use:breadcrumb.item</span>&gt;</span>\n    Search result:\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span>&gt;</span>Spectre<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span>',height:!1}}),{c(){n=k("h1"),n.textContent="Breadcrumbs",t=T(),l=k("p"),l.innerHTML='<a href="https://picturepan2.github.io/spectre/components/breadcrumbs.html">Breadcrumbs</a> are used as navigational hierarchies to indicate current location.',p=T(),e=k("p"),e.innerHTML="Apply the <code>breadcrumb</code> action to an element and <code>breadcrumb.item</code> to its child elements.",c=T(),rs(r.$$.fragment),C(n,"id","breadcrumbs")},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a),y(s,p,a),y(s,e,a),y(s,c,a),is(r,s,a),i=!0},p:s,i(s){i||(ts(r.$$.fragment,s),i=!0)},o(s){ls(r.$$.fragment,s),i=!1},d(s){s&&w(n),s&&w(t),s&&w(l),s&&w(p),s&&w(e),s&&w(c),hs(r,s)}}}const ta={};function la(a){let n,t,l,p,e,c,r,i,h,o;return h=new Is({props:{name:"Ex_0_465ac32e76e43ccb17c5f75aa05111a3",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; card, btn, img, heading, text, container, columns, col, spectre &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:container</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:columns</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:col</span>=</span></span><span class="javascript">&#123;[<span class="hljs-number">6</span>, <span class="hljs-number">12</span>]&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:card</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:card</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'image\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">use:img</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'responsive\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/osx-el-capitan.jpg"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">""</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:card</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'header\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:heading</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">5</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Microsoft<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:text</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'gray\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Software and hardware<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:card</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'body\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n          Empower every person and every organization on the planet to achieve more.\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:card</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'footer\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'primary\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Do<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:col</span>=</span></span><span class="javascript">&#123;[<span class="hljs-number">6</span>, <span class="hljs-number">12</span>]&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:card</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'shadow\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:card</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'header\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:heading</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">5</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Apple<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:text</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'gray\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Hardware and software<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:card</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'image\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">use:img</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'responsive\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/osx-yosemite.jpg"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">""</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:card</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'body\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n          To make a contribution to the world by making tools for the mind that advance humankind.\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:card</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'footer\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:spectre</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'btn-group btn-group-block\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'primary\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Buy<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span>&gt;</span>Buy<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span>&gt;</span>Buy<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>',height:!1}}),{c(){n=k("h1"),n.textContent="Cards",t=T(),l=k("p"),l.innerHTML='<a href="https://picturepan2.github.io/spectre/components/cards.html">Cards</a> are flexible content containers.',p=T(),e=k("h2"),e.textContent="Usage",c=T(),r=k("p"),r.innerHTML="Apply the <code>card</code> action on a container element and add <code>card.image</code>, <code>card.header</code>, <code>card.body</code> and/or <code>card.footer</code> actions to child elements. The <code>card.image</code> can be placed in any position.",i=T(),rs(h.$$.fragment),C(n,"id","cards"),C(e,"id","usage")},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a),y(s,p,a),y(s,e,a),y(s,c,a),y(s,r,a),y(s,i,a),is(h,s,a),o=!0},p:s,i(s){o||(ts(h.$$.fragment,s),o=!0)},o(s){ls(h.$$.fragment,s),o=!1},d(s){s&&w(n),s&&w(t),s&&w(l),s&&w(p),s&&w(e),s&&w(c),s&&w(r),s&&w(i),hs(h,s)}}}const pa={};function ea(a){let n,t,l,p,e,c,r,i,h,o,g,j;return r=new Is({props:{name:"Ex_0_e97f285b4d9fd03bde4f671e513a1f8b",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; chip, btn, avatar &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">use:chip</span>&gt;</span>Crime<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">use:chip</span>&gt;</span>Drama<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">use:chip</span>&gt;</span>Biography <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'clear\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">"Close"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">use:chip</span>&gt;</span>Mystery <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'clear\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">"Close"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">use:chip</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar</span>=</span></span><span class="javascript">&#123;&#123;<span class="hljs-attr">size</span>: <span class="hljs-string">\'sm\'</span>, <span class="hljs-attr">initial</span>: <span class="hljs-string">\'TS\'</span>&#125;&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n  Tony Stark\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'clear\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">"Close"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">use:chip</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">figure</span> <span class="hljs-attr">use:avatar</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'sm\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://picturepan2.github.io/spectre/img/avatar-1.png"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">""</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span>\n  Steve Rogers\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'clear\'</span>&#125;</span><span class="xml"><span class="hljs-tag"> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">"Close"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span>',height:!1}}),g=new Is({props:{name:"Ex_1_e97f285b4d9fd03bde4f671e513a1f8b",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; chip &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n\n  <span class="hljs-keyword">let</span> active = <span class="hljs-literal">true</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">use:chip</span>=</span></span><span class="javascript">&#123;&#123; active &#125;&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span></span><span class="javascript">&#123;active ? <span class="hljs-string">\'is\'</span> : <span class="hljs-string">\'not\'</span>&#125;</span><span class="xml"> active<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>\n  Toggle active\n  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">checkbox</span> <span class="hljs-attr">bind:checked</span>=</span></span><span class="javascript">&#123;active&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span></span>',height:!1}}),{c(){n=k("h1"),n.textContent="Chips",t=T(),l=k("p"),l.innerHTML='<a href="https://picturepan2.github.io/spectre/components/chips.html">Chips</a> are complex entities in small blocks.',p=T(),e=k("p"),e.innerHTML='Apply the <code>breadcrumb</code> action to an element and add child text element, <a href="spectre/buttons">buttons</a> or <a href="spectre/avatars">avatars</a>.',c=T(),rs(r.$$.fragment),i=T(),h=k("h2"),h.textContent="Active State",o=T(),rs(g.$$.fragment),C(n,"id","chips"),C(h,"id","active-state")},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a),y(s,p,a),y(s,e,a),y(s,c,a),is(r,s,a),y(s,i,a),y(s,h,a),y(s,o,a),is(g,s,a),j=!0},p:s,i(s){j||(ts(r.$$.fragment,s),ts(g.$$.fragment,s),j=!0)},o(s){ls(r.$$.fragment,s),ls(g.$$.fragment,s),j=!1},d(s){s&&w(n),s&&w(t),s&&w(l),s&&w(p),s&&w(e),s&&w(c),hs(r,s),s&&w(i),s&&w(h),s&&w(o),hs(g,s)}}}const ca={};function ra(a){let n,t,l,p,e,c,r,i;return r=new Is({props:{name:"Ex_0_f251fb8b206e371637db61d5ef875eef",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; empty, h5, btn &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:empty</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:empty.icon</span>&gt;</span>\n    </span><span class="hljs-comment">&lt;!-- &lt;i use:icon.people&gt;&lt;/i&gt; --&gt;</span><span class="xml">\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">use:empty.title</span> <span class="hljs-attr">use:h5</span>&gt;</span>You have no new messages<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">use:empty.subtitle</span>&gt;</span>Click the button to start a conversation.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:empty.action</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">use:btn</span>=</span></span><span class="javascript">&#123;<span class="hljs-string">\'primary\'</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>Send a message<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>',height:!1}}),{c(){n=k("h1"),n.textContent="Empty",t=T(),l=k("p"),l.innerHTML='<a href="https://picturepan2.github.io/spectre/components/empty.html">Empty</a> states/blank slates are commonly used as placeholders for first time use, empty data and error screens.',p=T(),e=k("p"),e.innerHTML="An empty state component can include icons, messages (title and subtitle messages) and action buttons or any combination of those elements. Apply <code>empty.icon</code>, <code>empty.title</code>, <code>empty.subtitle</code> or <code>empty.action</code> to the elements. HTML structure is exampled below.",c=T(),rs(r.$$.fragment),C(n,"id","empty")},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a),y(s,p,a),y(s,e,a),y(s,c,a),is(r,s,a),i=!0},p:s,i(s){i||(ts(r.$$.fragment,s),i=!0)},o(s){ls(r.$$.fragment,s),i=!1},d(s){s&&w(n),s&&w(t),s&&w(l),s&&w(p),s&&w(e),s&&w(c),hs(r,s)}}}const ia={};function ha(a){let n,t,l,p,e,c,r,i,h,o;return e=new Is({props:{name:"Ex_0_420d883657fe009587d4d05f0ae2a652",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; heading &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:heading</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">1</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>heading(1)<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:heading</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">2</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>heading(2)<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:heading</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">3</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>heading(3)<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:heading</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">4</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>heading(4)<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:heading</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">5</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>heading(5)<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:heading</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">6</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>heading(6)<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>',height:!1}}),h=new Is({props:{name:"Ex_1_420d883657fe009587d4d05f0ae2a652",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; h1, h2, h3, h4, h5, h6 &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:h1</span>&gt;</span>h1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:h2</span>&gt;</span>h2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:h3</span>&gt;</span>h3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:h4</span>&gt;</span>h4<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:h5</span>&gt;</span>h5<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:h6</span>&gt;</span>h6<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>',height:!1}}),{c(){n=k("h1"),n.textContent="Headings",t=T(),l=k("h2"),l.textContent="heading(type)",p=T(),rs(e.$$.fragment),c=T(),r=k("h2"),r.textContent="h*",i=T(),rs(h.$$.fragment),C(n,"id","headings"),C(l,"id","headingtype"),C(r,"id","h")},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a),y(s,p,a),is(e,s,a),y(s,c,a),y(s,r,a),y(s,i,a),is(h,s,a),o=!0},p:s,i(s){o||(ts(e.$$.fragment,s),ts(h.$$.fragment,s),o=!0)},o(s){ls(e.$$.fragment,s),ls(h.$$.fragment,s),o=!1},d(s){s&&w(n),s&&w(t),s&&w(l),s&&w(p),hs(e,s),s&&w(c),s&&w(r),s&&w(i),hs(h,s)}}}const oa={};function ga(a){let n,t,l,p,e,c,r,i;return r=new Is({props:{name:"Ex_0_db3bafe142a3903052a75f8b8ff8106f",code:'<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span><span class="javascript">\n  <span class="hljs-keyword">import</span> &#123; container, row, col &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">\'@svelkit/spectre\'</span>\n</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:container</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:row</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:col</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">6</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>col-6<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:col</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">3</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>col-3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:col</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">2</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>col-2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">use:col</span>=</span></span><span class="javascript">&#123;<span class="hljs-number">1</span>&#125;</span><span class="xml"><span class="hljs-tag">&gt;</span>col-1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>',height:!1}}),{c(){n=k("h1"),n.textContent="Layout",t=T(),l=k("p"),l.innerHTML='Layout includes <a href="https://developer.mozilla.org/en-US/docs/Glossary/Flexbox">flexbox</a> based responsive grid system with 12 columns.',p=T(),e=k("ul"),e.innerHTML='<li><a href="https://getbootstrap.com/docs/4.5/layout/grid/#how-it-works">https://getbootstrap.com/docs/4.5/layout/grid/#how-it-works</a></li> \n<li><a href="https://styled-system.com/responsive-styles">https://styled-system.com/responsive-styles</a></li>',c=T(),rs(r.$$.fragment),C(n,"id","layout")},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a),y(s,p,a),y(s,e,a),y(s,c,a),is(r,s,a),i=!0},p:s,i(s){i||(ts(r.$$.fragment,s),i=!0)},o(s){ls(r.$$.fragment,s),i=!1},d(s){s&&w(n),s&&w(t),s&&w(l),s&&w(p),s&&w(e),s&&w(c),hs(r,s)}}}const ja={};function ma(a){let n,t,l;return{c(){n=k("h1"),n.textContent="Text",t=T(),l=k("ul"),l.innerHTML="<li>text.left</li> \n<li>...</li>",C(n,"id","text")},m(s,a){y(s,n,a),y(s,t,a),y(s,l,a)},p:s,i:s,o:s,d(s){s&&w(n),s&&w(t),s&&w(l)}}}const ua={};const da=us(va());function fa(s){history.pushState({},"",""===s?xa():s),da.set(s.split("#")[0])}function ba(){da.set(va())}function va(){let s=location.pathname;return s=function(s){const a=xa();s.startsWith(a)&&(s=s.slice(a.length));s.startsWith("/")&&(s=s.slice(1));s.endsWith("/")&&(s=s.slice(0,-1));return s}(s),s}function $a(s){const a=s.target.closest("a");if(!a)return;const n=a.getAttribute("href");if(n){if(!/^\w+:\/\//.test(n))return s.preventDefault(),/^\/$/.test(n)?fa(""):fa(n);a.setAttribute("target","_blank")}}function xa(){let s=(document.querySelector("base")||{}).href.replace(window.location.origin,"").slice(0,-1);return""===s?"/":s}const ya=[{url:"",component:xs,title:$s.hasOwnProperty("title")?$s.title:"Great Success",meta:$s},{url:"sd:error",component:class extends js{constructor(s){super(),gs(this,s,null,ys,c,{})}},title:ws.hasOwnProperty("title")?ws.title:"Page not found!",meta:ws},{url:"getting-started",component:class extends js{constructor(s){super(),gs(this,s,null,ks,c,{})}},title:_s.hasOwnProperty("title")?_s.title:"About my component",meta:_s},{url:"index",component:xs,title:$s.hasOwnProperty("title")?$s.title:"Great Success",meta:$s},{url:"spectre/api",component:class extends js{constructor(s){super(),gs(this,s,null,Us,c,{})}},title:Ys.hasOwnProperty("title")?Ys.title:"@svelkit/spectre",meta:Ys},{url:"spectre/avatars",component:class extends js{constructor(s){super(),gs(this,s,null,Ks,c,{})}},title:Zs.hasOwnProperty("title")?Zs.title:"Avatars",meta:Zs},{url:"spectre/badges",component:class extends js{constructor(s){super(),gs(this,s,null,Fs,c,{})}},title:Xs.hasOwnProperty("title")?Xs.title:"Badges",meta:Xs},{url:"spectre/bars",component:class extends js{constructor(s){super(),gs(this,s,null,Js,c,{})}},title:Qs.hasOwnProperty("title")?Qs.title:"Bars",meta:Qs},{url:"spectre/baseline",component:class extends js{constructor(s){super(),gs(this,s,null,sa,c,{})}},title:aa.hasOwnProperty("title")?aa.title:"Baseline",meta:aa},{url:"spectre/breadcrumbs",component:class extends js{constructor(s){super(),gs(this,s,null,na,c,{})}},title:ta.hasOwnProperty("title")?ta.title:"Breadcrumbs",meta:ta},{url:"spectre/cards",component:class extends js{constructor(s){super(),gs(this,s,null,la,c,{})}},title:pa.hasOwnProperty("title")?pa.title:"Cards",meta:pa},{url:"spectre/chips",component:class extends js{constructor(s){super(),gs(this,s,null,ea,c,{})}},title:ca.hasOwnProperty("title")?ca.title:"Chips",meta:ca},{url:"spectre/empty",component:class extends js{constructor(s){super(),gs(this,s,null,ra,c,{})}},title:ia.hasOwnProperty("title")?ia.title:"Empty",meta:ia},{url:"spectre/headings",component:class extends js{constructor(s){super(),gs(this,s,null,ha,c,{})}},title:oa.hasOwnProperty("title")?oa.title:"Headings",meta:oa},{url:"spectre/layout",component:class extends js{constructor(s){super(),gs(this,s,null,ga,c,{})}},title:ja.hasOwnProperty("title")?ja.title:"Layout",meta:ja},{url:"spectre/text",component:class extends js{constructor(s){super(),gs(this,s,null,ma,c,{})}},title:ua.hasOwnProperty("title")?ua.title:"Text",meta:ua}],wa=ya.filter(s=>"sd:error"===s.url)[0],ka=function(a,n,t){const l=!Array.isArray(a),c=l?[a]:a,i=n.length<2;return{subscribe:us(t,a=>{let t=!1;const h=[];let o=0,g=s;const j=()=>{if(o)return;g();const t=n(l?h[0]:h,a);i?a(t):g=e(t)?t:s},m=c.map((s,a)=>r(s,s=>{h[a]=s,o&=~(1<<a),t&&j()},()=>{o|=1<<a}));return t=!0,j(),function(){p(m),g()}}).subscribe}}(da,s=>{const a=ya.filter(a=>a.url===s);return a.length>0?a[0]:wa});var _a="Svelte Thing Documentation";function Ta(a){let n;return{c(){n=k("h1"),n.innerHTML='<a href="/">Svelte<span class="svelte-19hlx4g">Docs</span></a>',C(n,"id","sveltesvelte-md-block-tag-1")},m(s,a){y(s,n,a)},p:s,i:s,o:s,d(s){s&&w(n)}}}class La extends js{constructor(s){super(),gs(this,s,null,Ta,c,{})}}function Ea(a){let n;return{c(){n=k("ul"),n.innerHTML='<li><a href="getting-started">Docs</a></li> \n<li><a href="https://github.com/kenoxa/svelkit">Github</a></li>'},m(s,a){y(s,n,a)},p:s,i:s,o:s,d(s){s&&w(n)}}}class Ca extends js{constructor(s){super(),gs(this,s,null,Ea,c,{})}}function Ma(a){let n,t,l,p,e,c;return t=new La({}),e=new Ca({}),{c(){n=k("section"),rs(t.$$.fragment),l=T(),p=k("section"),rs(e.$$.fragment)},m(s,a){y(s,n,a),is(t,n,null),y(s,l,a),y(s,p,a),is(e,p,null),c=!0},p:s,i(s){c||(ts(t.$$.fragment,s),ts(e.$$.fragment,s),c=!0)},o(s){ls(t.$$.fragment,s),ls(e.$$.fragment,s),c=!1},d(s){s&&w(n),hs(t),s&&w(l),s&&w(p),hs(e)}}}class Ha extends js{constructor(s){super(),gs(this,s,null,Ma,c,{})}}function Aa(a){let n;return{c(){n=k("ul"),n.innerHTML='<li><a href="getting-started">Getting Started</a></li> \n<li>Spectre<ul><li><a href="spectre/api">API</a></li> \n<li><a href="spectre/baseline">Baseline</a></li> \n<li><a href="spectre/avatars">Avatars</a></li> \n<li><a href="spectre/badges">Badges</a></li> \n<li><a href="spectre/bars">Bars</a></li> \n<li><a href="spectre/breadcrumbs">Breadcrumbs</a></li> \n<li><a href="spectre/cards">Cards</a></li> \n<li><a href="spectre/chips">Chips</a></li> \n<li><a href="spectre/empty">Empty</a></li> \n<li><a href="spectre/headings">Headings</a></li> \n<li><a href="spectre/text">Text</a></li></ul></li> \n<li><a href="https://github.com/kenoxa/svelkit">Github</a></li>'},m(s,a){y(s,n,a)},p:s,i:s,o:s,d(s){s&&w(n)}}}class Sa extends js{constructor(s){super(),gs(this,s,null,Aa,c,{})}}function Ba(a){let n,t;return n=new Sa({}),{c(){rs(n.$$.fragment)},m(s,a){is(n,s,a),t=!0},p:s,i(s){t||(ts(n.$$.fragment,s),t=!0)},o(s){ls(n.$$.fragment,s),t=!1},d(s){hs(n,s)}}}class Oa extends js{constructor(s){super(),gs(this,s,null,Ba,c,{})}}function Pa(s){let a,n,t;var l=s[0].component;return l&&(n=new l({})),{c(){a=k("article"),n&&rs(n.$$.fragment)},m(s,l){y(s,a,l),n&&is(n,a,null),t=!0},p(s,[t]){if(l!==(l=s[0].component)){if(n){as();const s=n;ls(s.$$.fragment,1,0,()=>{hs(s,1)}),ns()}l?(n=new l({}),rs(n.$$.fragment),ts(n.$$.fragment,1),is(n,a,null)):n=null}},i(s){t||(n&&ts(n.$$.fragment,s),t=!0)},o(s){n&&ls(n.$$.fragment,s),t=!1},d(s){s&&w(a),n&&hs(n)}}}function Na(s,a,n){let t;return i(s,ka,s=>n(0,t=s)),ka.subscribe(()=>{window.scrollTo(0,0)}),[t]}class za extends js{constructor(s){super(),gs(this,s,Na,Pa,c,{})}}const{document:Ga}=cs;function Da(s){let a,n,t;return n=new za({}),{c(){a=k("main"),rs(n.$$.fragment),C(a,"class","fullscreen"),H(a,"mobile",s[2])},m(s,l){y(s,a,l),is(n,a,null),t=!0},p(s,n){4&n&&H(a,"mobile",s[2])},i(s){t||(ts(n.$$.fragment,s),t=!0)},o(s){ls(n.$$.fragment,s),t=!1},d(s){s&&w(a),hs(n)}}}function Ia(s){let a,n,t,l,p,e=s[2]&&Ua(s),c=(!s[2]||s[1])&&Ya(s);return l=new za({}),{c(){e&&e.c(),a=T(),c&&c.c(),n=T(),t=k("main"),rs(l.$$.fragment),H(t,"mobile",s[2])},m(s,r){e&&e.m(s,r),y(s,a,r),c&&c.m(s,r),y(s,n,r),y(s,t,r),is(l,t,null),p=!0},p(s,l){s[2]?e?e.p(s,l):(e=Ua(s),e.c(),e.m(a.parentNode,a)):e&&(e.d(1),e=null),!s[2]||s[1]?c?6&l&&ts(c,1):(c=Ya(s),c.c(),ts(c,1),c.m(n.parentNode,n)):c&&(as(),ls(c,1,1,()=>{c=null}),ns()),4&l&&H(t,"mobile",s[2])},i(s){p||(ts(c),ts(l.$$.fragment,s),p=!0)},o(s){ls(c),ls(l.$$.fragment,s),p=!1},d(s){e&&e.d(s),s&&w(a),c&&c.d(s),s&&w(n),s&&w(t),hs(l)}}}function Ua(s){let a,n,t,l,p;return{c(){a=k("button"),n=k("img"),n.src!==(t="assets/burger.svg")&&C(n,"src","assets/burger.svg"),C(n,"alt","Open Menu"),M(n,"transform","rotate("+s[3]+"deg)"),C(a,"class","showNav")},m(t,e){var c;y(t,a,e),x(a,n),l||(p=E(a,"click",(c=s[12],function(s){return s.stopPropagation(),c.call(this,s)})),l=!0)},p(s,a){8&a&&M(n,"transform","rotate("+s[3]+"deg)")},d(s){s&&w(a),l=!1,p()}}}function Ya(s){let a,n,t,l,e,c,r,i;return n=new Oa({}),{c(){a=k("nav"),rs(n.$$.fragment)},m(p,e){y(p,a,e),is(n,a,null),c=!0,r||(i=[m(t=s[7].call(null,a)),m(l=s[8].call(null,a))],r=!0)},i(t){c||(ts(n.$$.fragment,t),q(()=>{e||(e=es(a,s[6],{},!0)),e.run(1)}),c=!0)},o(t){ls(n.$$.fragment,t),e||(e=es(a,s[6],{},!1)),e.run(0),c=!1},d(s){s&&w(a),hs(n),s&&e&&e.end(),r=!1,p(i)}}}function Ra(s){let a,n,t,l,p,e,c,r,i,h;q(s[11]),Ga.title=a=s[4],l=new Ha({});let o="no_sidebar"===s[5]&&Da(s),g="default"===s[5]&&Ia(s);return{c(){n=T(),t=k("header"),rs(l.$$.fragment),p=T(),o&&o.c(),e=T(),g&&g.c(),c=L()},m(a,j){y(a,n,j),y(a,t,j),is(l,t,null),y(a,p,j),o&&o.m(a,j),y(a,e,j),g&&g.m(a,j),y(a,c,j),r=!0,i||(h=E(window,"resize",s[11]),i=!0)},p(s,[n]){(!r||16&n)&&a!==(a=s[4])&&(Ga.title=a),"no_sidebar"===s[5]?o?(o.p(s,n),32&n&&ts(o,1)):(o=Da(s),o.c(),ts(o,1),o.m(e.parentNode,e)):o&&(as(),ls(o,1,1,()=>{o=null}),ns()),"default"===s[5]?g?(g.p(s,n),32&n&&ts(g,1)):(g=Ia(s),g.c(),ts(g,1),g.m(c.parentNode,c)):g&&(as(),ls(g,1,1,()=>{g=null}),ns())},i(s){r||(ts(l.$$.fragment,s),ts(o),ts(g),r=!0)},o(s){ls(l.$$.fragment,s),ls(o),ls(g),r=!1},d(s){s&&w(n),s&&w(t),hs(l),s&&w(p),o&&o.d(s),s&&w(e),g&&g.d(s),s&&w(c),i=!1,h()}}}function Wa(s,t,l){let p,e,c;i(s,ka,s=>l(13,c=s));let r=0,h=!1;const o=us(!0);i(s,o,s=>l(2,p=s));const g=function(s,t={}){const l=us(s);let p,e=s;function c(c,r){if(null==s)return l.set(s=c),Promise.resolve();e=c;let i=p,h=!1,{delay:o=0,duration:g=400,easing:j=a,interpolate:m=bs}=n(n({},t),r);if(0===g)return i&&(i.abort(),i=null),l.set(s=e),Promise.resolve();const u=d()+o;let f;return p=$(a=>{if(a<u)return!0;h||(f=m(s,c),"function"==typeof g&&(g=g(s,c)),h=!0),i&&(i.abort(),i=null);const n=a-u;return n>g?(l.set(s=c),!1):(l.set(s=f(j(n/g))),!0)}),p.promise}return{set:c,update:(a,n)=>c(a(e,s),n),subscribe:l.subscribe}}(0,{duration:200,easing:ds});i(s,g,s=>l(3,e=s));let m,u;return s.$$.update=()=>{1&s.$$.dirty&&j(o,p=r<800,p),6&s.$$.dirty&&l(1,h=!!p&&h),2&s.$$.dirty&&j(g,e=h?180:0,e),8192&s.$$.dirty&&l(4,m=c.title?c.title+" — "+_a:_a),8192&s.$$.dirty&&l(5,u=c.meta.layout?c.meta.layout:"default")},[r,h,p,e,m,u,function(s){const a=ds,n=getComputedStyle(s),t=parseFloat(n.width);return{delay:10,duration:200,easing:a,css:s=>`overflow: hidden;width: ${s*t}px;`}},function(s){return{destroy:ka.subscribe(a=>{const n=a.url||"/";s.querySelectorAll("a").forEach(s=>{s.getAttribute("href")===n?s.classList.add("active"):s.classList.remove("active")})})}},function(s){const a=()=>l(1,h=!1);return document.body.addEventListener("click",a),{destroy(){document.body.removeEventListener("click",a)}}},o,g,function(){l(0,r=window.innerWidth)},()=>l(1,h=!h)]}class qa extends js{constructor(s){super(),gs(this,s,Wa,Ra,c,{})}}function Ka(a){let n,t;return n=new qa({}),{c(){rs(n.$$.fragment)},m(s,a){is(n,s,a),t=!0},p:s,i(s){t||(ts(n.$$.fragment,s),t=!0)},o(s){ls(n.$$.fragment,s),t=!1},d(s){hs(n,s)}}}function Za(s){return G(()=>(addEventListener("click",$a),addEventListener("popstate",ba),function(){removeEventListener("click",$a),removeEventListener("popstate",ba)})),[]}return new class extends js{constructor(s){super(),gs(this,s,Za,Ka,c,{})}}({target:document.body,props:{}})}();
