/**
 * Source: https://github.com/picturepan2/spectre/blob/0.5.10/src/_layout.scss
 */

html,
.container,
.columns,
.column {
  box-sizing: border-box;
}
*,
*::after,
*::before {
  box-sizing: inherit;
}

// Layout
.container {
  // composes: container from global;
  margin-left: auto;
  margin-right: auto;
  padding-left: $layout-spacing;
  padding-right: $layout-spacing;
  width: 100%;

  $grid-spacing: ($layout-spacing / ($layout-spacing * 0 + 1)) * $html-font-size;

  @each $breakpoint, $size in $sizes {
    &.grid-#{$breakpoint} {
      max-width: $grid-spacing * 2 + $size;
    }
  }
}

// Responsive breakpoint system
@each $breakpoint in $breakpoints {
  .grid-#{$breakpoint} {
    // composes: grid-#{$breakpoint} from global;
  }
  .show-#{$breakpoint} {
    // composes: show-#{$breakpoint} from global;
    display: none !important;
  }
  .hide-#{$breakpoint} {
    // composes: hide-#{$breakpoint} from global;
  }
}

// gap
@each $gap in $columns {
  .columns {
    &.gap-#{$gap},
    &.gap-around-#{$gap} {
      flex-basis: calc(100% + #{$layout-spacing} * #{$gap});
      margin-top: calc(-#{$layout-spacing} * #{$gap});
      margin-left: calc(-#{$layout-spacing} * #{$gap});

      > * {
        margin-top: calc(#{$layout-spacing} * #{$gap});
        margin-left: calc(#{$layout-spacing} * #{$gap});
        @for $column from 1 through length($columns)-1 {
          &.col-#{$column} {
            flex: 0
              1
              calc(#{$column} / #{length($columns)} * 100% - (#{$layout-spacing} * #{$gap}));
          }
        }
      }
    }
    &.gap-around-#{$gap} {
      padding: calc(#{$layout-spacing} * #{$gap});
    }
  }
}

// Responsive grid system
.columns {
  // composes: columns from global;
  box-sizing: border-box;
  display: flex;
  flex: 0 1 100%;
  flex-flow: row wrap;
  // margin-left: -$layout-spacing;
  // margin-right: -$layout-spacing;

  &.col-oneline {
    flex-wrap: nowrap;
    overflow-x: auto;
  }
}
.col-oneline {
  // composes: col-oneline from global;
}
.column {
  // composes: column from global;
}
/* [class~="col-"] => not needed as we add the column class to each col-* */
.column {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 100%;
  padding: $layout-spacing;

  @each $column in $columns {
    &.col-#{$column} {
      flex: 0 1 ($column / length($columns) * 100%);
    }
  }
  &.col-auto {
    flex: 0 0 auto;
  }
}

@each $column in $columns {
  .col-#{$column} {
    // composes: col-#{$column} from global;
  }
}
.col-auto {
  // composes: col-auto from global;
  flex: 0 0 auto;
  max-width: none;
  width: auto;
}
.col-mx-auto {
  // composes: col-mx-auto from global;
  margin-left: auto;
  margin-right: auto;
}
.col-ml-auto {
  // composes: col-ml-auto from global;
  margin-left: auto;
}
.col-mr-auto {
  // composes: col-mr-auto from global;
  margin-right: auto;
}

@each $breakpoint, $size in $sizes {
  @media (min-width: $size) {
    .hide-#{$breakpoint} {
      display: none !important;
    }
    .show-#{$breakpoint} {
      display: flex !important;
    }

    // gaps
    @each $gap in $columns {
      .columns {
        &.gap-#{$gap},
        &.gap-around-#{$gap} {
          > * {
            @for $column from 1 through length($columns)-1 {
              &.col-#{$breakpoint}-#{$column} {
                flex: 0
                  1
                  calc(#{$column} / #{length($columns)} * 100% - (#{$layout-spacing} * #{$gap}));
              }
            }
          }
        }
      }
    }

    // column
    .column {
      @each $column in $columns {
        &.col-#{$breakpoint}-#{$column} {
          flex: 0 1 ($column / length($columns) * 100%);
        }
      }
      &.col-#{$breakpoint}-auto {
        flex: 0 0 auto;
      }
    }

    @each $column in $columns {
      .col-#{$breakpoint}-#{$column} {
        .col-#{$breakpoint}-#{$column} {
          // composes: col-#{$breakpoint}-#{$column} from global;
        }
      }
    }

    .col-#{$breakpoint}-auto {
      // composes: col-#{$breakpoint}-auto from global;
    }
  }
}
